# Conditional Statements in Python: Even or Odd Checker

## ðŸŽ¯ Aim
To write a Python program to  print the account balance after withdrawal.
savingsbalance=5000

## ðŸ§  Algorithm
`````````````
Start
Set savingAmt = 5000
Read withd (withdrawal amount) from the user
Check if withd > savingAmt
If True â†’ Print "Insufficient balance"
If False â†’ Calculate balance = savingAmt - withd
Print "Account Balance: balance"

End
``````````````
## ðŸ§¾ Program
``````````````````
savingAmt=5000
withd=int(input())


if(withd>savingAmt) :
	print ("Insufficient balance")
else:
    print("Account Balance:",savingAmt-withd)
	
`````````````````````````````

## Output
<img width="1035" height="292" alt="image" src="https://github.com/user-attachments/assets/69500ad8-70ea-4a56-88e4-69a5e3f7f3a5" />


## Result
thus to write a Python program to  print the account balance after withdrawal is compiled and the output is verified successfully.



# Ex 1:Datatypes-Boolean Expression Evaluation in Python

## ðŸŽ¯ Aim
To write a Python program that evaluates and prints the results of boolean and arithmetic expressions involving `True` and `False`.

## ðŸ§  Algorithm
1. Set variable `a` to the result of the expression `1== True`.
2. Set variable `b` to the result of the expression `1== False`.
3. Set variable `c` to the result of the expression `True + 3`.
4. Set variable `d` to the result of the expression `False + 7`.
5. Print the value of `a` with the label "a is".
6. Print the value of `b` with the label "b is".
7. Print the value of `c` with the label "c:".
8. Print the value of `d` with the label "d:".

## ðŸ’» Program
`````````````````

a = (1 == True)
b = (1 == False)
c = True + 3
d = False + 7
print("a is",a)
print("b is",b)
print("c:",c)
print("d:",d)
``````````````````````````

## Output
<img width="996" height="261" alt="image" src="https://github.com/user-attachments/assets/7c2b0558-dd6a-41c2-95fa-8523e5924e0c" />

## Result
thus to write a python program that evaluates and prints the results of boolean and arithmetic expressions involving `True` and `False` is compiled and the output is verified successfully.

